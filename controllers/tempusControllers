const mongoose = require('mongoose');
const asyncHandler = require('express-async-handler')
const axios = require('axios');

//get local time
const getCurrentTime = asyncHandler(async (req, res) => {

    // get the city from the app
    const { city } = req.body

    //validate the city
    if (!city) {
        res.status(404);

        throw new Error('City is required');
    }


    // Define your API endpoint
    const apiUrl = process.env.BASE_URL + '/timezone.json';


    // Define the request data
    const requestData = {
        params: {
            key: process.env.TEMPUSKEY,
            q: city,

        },
    };

    // Function to format a date in "Month Day, Year" format
    function formatDate(dateString) {
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        return new Date(dateString).toLocaleDateString(undefined, options);
    }

    // Function to convert time to 12-hour format
    function formatTime(timeString) {
        return new Date(timeString).toLocaleTimeString('en-US', {
            hour: 'numeric',
            minute: 'numeric',
            hour12: true,
        });
    }

    // Make a GET request using Axios
    axios.get(apiUrl, requestData)
        .then((response) => {
            // Handle the response data
            // Extract the relevant data from the response
            const { tz_id, localtime, localtime_epoch } = response.data.location;
            // Format the date and time
            const formattedDate = formatDate(localtime);
            const formattedTime = formatTime(localtime);

            // Create an object with the formatted data
            const formattedData = {
                zone: tz_id,
                date: formattedDate,
                time: formattedTime,
            };

            // Send the extracted data as a JSON response with a status code of 200
            res.status(200).json(formattedData);
        })
        .catch((error) => {
            // Handle errors
            console.error(error);
            res.status(500).json({ error: 'Internal Server Error' });
        });

})

module.exports = {
    getCurrentTime
}